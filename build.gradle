buildscript {
	ext {
		springBootVersion = '1.5.1.RELEASE'
	}
	repositories {
		mavenLocal()
		mavenCentral()
		jcenter()

		maven { url "http://repo1.maven.org/maven2/" }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath('se.transmode.gradle:gradle-docker:1.2')
	}
}

task wrapper(type: Wrapper) {
	gradleVersion = '2.14.1'
}

allprojects {
	apply plugin: 'maven'
	apply plugin: 'eclipse'
	apply plugin: 'idea'
	apply plugin: 'jacoco'
	apply plugin: 'java'

	repositories {
		mavenLocal()
		mavenCentral()
		jcenter()

		maven { url "http://repo1.maven.org/maven2/" }
	}

	version =  '0.1.0'
	sourceCompatibility = '1.8'
	targetCompatibility = '1.8'

	idea {
		module {
			downloadJavadoc = true
			downloadSources = true
		}
	}
}

subprojects {
	apply plugin: 'application'
	apply plugin: 'org.springframework.boot'
	apply plugin: 'docker'

	applicationDefaultJvmArgs = ['-Xmx1g', '-Xms512m']

	task buildDocker(type: Docker, dependsOn: build) {
		applicationName = "${jar.baseName}"
		push = project.hasProperty('push')
		if (project.hasProperty("latest")) {
			tagVersion = "latest"
		}
		tag = "utsman/${project.rootProject.name}-${applicationName}"
		dockerfile = file('src/main/docker/Dockerfile')
		doFirst {
			copy {
				from jar
				into stageDir
			}
		}
	}

	jar {
		archiveName = "${project.name}.jar"
	}

	dependencyManagement {
		imports {
			mavenBom 'org.springframework.cloud:spring-cloud-dependencies:Camden.SR5'
		}
	}
	dependencies {
		compile 'com.google.guava:guava:21.0'
		compile 'org.springframework.cloud:spring-cloud-starter-eureka'
		compile 'org.springframework.boot:spring-boot-starter-actuator'
		compile 'org.springframework.cloud:spring-cloud-starter-config'
		compileOnly "org.projectlombok:lombok:1.16.14"
		testCompile 'org.springframework.boot:spring-boot-starter-test'
	}
}

project(':config-server') {
	dependencies {
		compile 'org.springframework.cloud:spring-cloud-config-server'
	}
}

project(':discovery-server') {
	dependencies {
		compile 'org.springframework.cloud:spring-cloud-starter-eureka-server'
	}
}

project(':statistics-service') {
	dependencies {
	}
}

project(':edge-server') {
	dependencies {
		compile 'org.springframework.cloud:spring-cloud-starter-zuul'
	}
}

task codeCoverageReport(type: JacocoReport) {
	executionData fileTree(project.rootDir.absolutePath).include("**/build/jacoco/*.exec")

	subprojects.each {
		sourceSets it.sourceSets.main
	}

	reports {
		xml.enabled true
		xml.destination "${buildDir}/reports/jacoco/report.xml"
		html.enabled false
		csv.enabled false
	}
}

codeCoverageReport.dependsOn {
	subprojects*.test
}

